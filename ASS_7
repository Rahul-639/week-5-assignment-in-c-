#include <bits/stdc++.h>
using namespace std;
class Solution {
public:
    vector<long long> nextLargerElement(vector<long long>& arr, int n) {
        vector<long long> res(n, -1);
        stack<long long> st;  // stack to hold next greater candidates
        for (int i = n - 1; i >= 0; i--) {
            while (!st.empty() && st.top() <= arr[i]) {
                st.pop();
            }
            if (!st.empty()) {
                res[i] = st.top();
            }
            st.push(arr[i]);
        }

        return res;
    }
};
int main() {
    Solution sol;
    vector<long long> arr1 = {1, 3, 2, 4};
    vector<long long> ans1 = sol.nextLargerElement(arr1, arr1.size());
    for (auto x : ans1) cout << x << " ";
    cout << endl;
    vector<long long> arr2 = {6, 8, 0, 1, 3};
    vector<long long> ans2 = sol.nextLargerElement(arr2, arr2.size());
    for (auto x : ans2) cout << x << " ";
    cout << endl;
    vector<long long> arr3 = {5, 4, 3, 1};
    vector<long long> ans3 = sol.nextLargerElement(arr3, arr3.size());
    for (auto x : ans3) cout << x << " ";
    cout << endl;
    return 0;
}
